# Based on https://github.com/fluent/fluentd-kubernetes-daemonset/blob/master/docker-image/v1.2/debian-syslog/conf/kubernetes.conf

<source>
  @type tail
  @id in_tail_container_logs
  path /var/log/containers/*.log
  pos_file /var/log/fluentd-containers.log.pos
  tag kubernetes_1
  read_from_head true
  path_key logfile
  <parse>
    @type json
    time_format %Y-%m-%dT%H:%M:%S.%NZ
  </parse>
</source>


<match kubernetes_1>
  @type rewrite_tag_filter
  <rule>
    key logfile
    pattern .*\/([a-z0-9-]+)-([a-z0-9]{10}-[a-z0-9]{5})_([a-z0-9-]+)_[a-z0-9-]+\.log$
    tag kubernetes_2.$1.$2.$3
  </rule>
</match>

<match kubernetes_2.**>
  @type rewrite_tag_filter
  <rule>
    key stream
    pattern ^(.*)$
    tag kubernetes_3.${tag_parts[1]}.${tag_parts[2]}.${tag_parts[3]}.$1
  </rule>
</match>

<filter kubernetes_3.**>
  @type record_transformer
  auto_typecast true 
  enable_ruby true
  <record>
    severity "${tag_parts[4]}"
    pod "${tag_parts[2]}"
    namespace "${tag_parts[3]}"
    name "${tag_parts[1]}"
    #parsed ${begin; x=JSON.parse(record['log']); x.each do |k,v|; x[k]=v.to_i rescue v ; x; end; rescue JSON::ParserError ; Hash.new ; end}
    parsed ${begin; x=JSON.parse(record['log']); x.each do |k,v|; x[k]=v rescue v ; x; end; rescue JSON::ParserError ; Hash.new ; end}
  </record>
</filter>

# <filter kubernetes_3.**>
#   @type parser#   key_name log<filter kubernetes_3.**>

#   #suppress_parse_error_log true
#   #emit_invalid_record_to_error false
#   hash_value_field parsed
#   reserve_data true
#   <parse>
#     @type json
#   </parse>
# </filter>

<match kubernetes_3.**>
  @type rewrite_tag_filter
  <rule>
    key name
    pattern ^(.*)$
    tag out.kubernetes.${tag_parts[1]}.${tag_parts[4]}
  </rule>
</match>


# Add /var/lib/docker for container logs